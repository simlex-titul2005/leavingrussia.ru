@model SxVMEditAppUser
@{
    Layout = null;
    var roles = (SxAppRole[])ViewBag.Roles;
    var message = TempData["UserRoleMessage"];
}

@if (message != null)
{
    <h3 class="text-warning">Роли <span class="pull-right small" id="mes-roles">@message</span></h3>
}
else
{
    <h3 class="text-warning">Роли</h3>
}
@using (Ajax.BeginForm("EditRoles", new { controller="users"}, new AjaxOptions { HttpMethod = "post", UpdateTargetId = "roles" , OnBegin="$(this).closest('section').find('button').prepend('<i class=\"fa fa-spin fa-spinner\"></i>&nbsp;')", OnComplete= "removeMessage('#mes-roles')" }))
{
    @Html.AntiForgeryToken()
    <input type="hidden" name="userId" value="@Model.Id" />
    <table class="table table-striped table-condensed roles">
        <tbody>
            @for (int i = 0; i < roles.Length; i++)
            {
                var role = roles[i];
                var hasRole = Model.Roles.FirstOrDefault(x => x.Id == role.Id) != null;
                <tr>
                    <td>
                        @if (!hasRole)
                        {
                            <input type="checkbox" name="role" autocomplete="off" value="@role.Name" />
                        }
                        else
                        {
                            <input type="checkbox" name="role" autocomplete="off" checked value="@role.Name" />
                        }
                    </td>
                    <td>@role.Name</td>
                    <td>@role.Description</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="text-right">
        <button type="submit" class="btn btn-primary">Сохранить</button>
    </div>
}